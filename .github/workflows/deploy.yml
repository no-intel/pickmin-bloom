# ---------------------------------------
# GitHub Actions CI/CD 배포 워크플로우
# 브랜치: main에 push 되면 EC2로 자동 배포
# 수동 실행도 지원 (Run workflow 버튼)
# ---------------------------------------

name: Deploy to EC2

on:
  workflow_dispatch:
    inputs:
      branch:
        description: '배포할 브랜치'
        default: 'main'
        required: true

  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 코드 가져오기
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 📄 변경 파일 확인
        id: file_check
        run: |
          echo "📦 Diff range: ${{ github.event.before }} → ${{ github.sha }}"
          git fetch origin master
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | tr '\n' ' ')
          echo "변경 파일 목록:"
          echo "$CHANGED"
          echo "changed_files=$CHANGED" >> $GITHUB_OUTPUT

      - name: 🚫 README.md만 변경된 경우 종료
        if: |
          steps.file_check.outputs.changed_files == 'README.md' ||
          (contains(steps.file_check.outputs.changed_files, 'README.md') && !contains(steps.file_check.outputs.changed_files, '.java') && !contains(steps.file_check.outputs.changed_files, '.yaml'))
        run: |
          echo "🛑 README.md만 변경됨. 배포하지 않음."
          exit 0

      - name: ✅ gradlew 실행 권한 부여
        run: chmod +x ./gradlew

      - name: 🛠️ Gradle Build (No Tests)
        run: ./gradlew clean build -x test

      - name: 🚚 EC2에 JAR 파일 복사 (SCP)
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "build/libs/app.jar"
          target: "/home/ec2-user/"

      - name: 🚀 EC2에서 배포 스크립트 실행 (SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            set -e
            cd ~
            mv ~/build/libs/app.jar ~/app.jar
            sudo chmod +x deploy.sh
            ./deploy.sh
